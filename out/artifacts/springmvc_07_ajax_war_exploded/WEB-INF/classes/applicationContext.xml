<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!--自动扫描指定的包，下面所有的注解容器交给IOC进行管理-->
    <context:component-scan base-package="com.kuang.controller"/>
    <!--静态资源过滤-->
    <!--Spring MVC 将接收到的所有请求都看作是一个普通的请求，
    包括对于静态资源的请求。这样以来，所有对于静态资源的请求都会被看作是一个普通的后台控制器请求，
    导致请求找不到而报 404 异常错误。-->
    <!--这个功能就是：如果该请求已经作了映射，那么会接着交给后台对应的处理程序，
    如果没有作映射，就交给 WEB 应用服务器默认的 Servlet 处理，从而找到对应的静态资源，
    只有再找不到资源时才会报错。-->
    <mvc:default-servlet-handler />
    <!--Spring 3.0.x中使用了mvc:annotation-driven后，
    默认会帮我们注册默认处理请求，参数和返回值的类.
    它会处理@RequestMapping,@Component，@Controller，@Service，@Repository等注解-->
    <mvc:annotation-driven/>

    <!--JSON乱码问题配置，这段完完全全写死的-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                        <property name="failOnEmptyBeans" value="false"/>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="internalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

</beans>